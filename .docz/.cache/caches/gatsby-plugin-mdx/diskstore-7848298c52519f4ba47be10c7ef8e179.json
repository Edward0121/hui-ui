{"expireTime":9007200842561009000,"key":"gatsby-plugin-mdx-entire-payload-97c2f09a11c563ead165583fa2a6399b-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/huijiawei/Documents/projects/hui-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":121,"offset":122},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":124},"end":{"line":5,"column":29,"offset":152},"indent":[]}},{"type":"import","value":"import {Playground, Props} from 'docz';\nimport Input from './index.js';\nimport Button from '../button/index.js';\nimport '../../style/css/font-awesome.css';","position":{"start":{"line":8,"column":1,"offset":155},"end":{"line":11,"column":43,"offset":310},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Input 输入框","position":{"start":{"line":13,"column":3,"offset":314},"end":{"line":13,"column":12,"offset":323},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":312},"end":{"line":13,"column":12,"offset":323},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"结合textarea和input的输入框组件","position":{"start":{"line":14,"column":1,"offset":324},"end":{"line":14,"column":23,"offset":346},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":324},"end":{"line":14,"column":23,"offset":346},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"基本使用","position":{"start":{"line":16,"column":4,"offset":351},"end":{"line":16,"column":8,"offset":355},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":348},"end":{"line":16,"column":8,"offset":355},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"普通输入框","position":{"start":{"line":18,"column":5,"offset":361},"end":{"line":18,"column":10,"offset":366},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":357},"end":{"line":18,"column":10,"offset":366},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"设置placeholder,value,onchange属性组成输入框的基本功能","position":{"start":{"line":19,"column":1,"offset":367},"end":{"line":19,"column":41,"offset":407},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":367},"end":{"line":19,"column":41,"offset":407},"indent":[]}},{"type":"jsx","value":"<Playground>\n  {\n    () => {\n      const [query, setquery] = React.useState('');\n      return (\n        <div style={{'marginLeft': '20px', 'marginTop': '10px'}}>\n          <Input placeholder=\"请输入内容\" value={query} onChange={(val) => setquery(val) }/>\n        </div>\n      )\n    }\n  }\n</Playground>","position":{"start":{"line":21,"column":1,"offset":409},"end":{"line":32,"column":14,"offset":705},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"输入禁用","position":{"start":{"line":34,"column":5,"offset":711},"end":{"line":34,"column":9,"offset":715},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":707},"end":{"line":34,"column":9,"offset":715},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"disabled属性禁用输入框","position":{"start":{"line":35,"column":1,"offset":716},"end":{"line":35,"column":16,"offset":731},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":716},"end":{"line":35,"column":16,"offset":731},"indent":[]}},{"type":"jsx","value":"<Playground>\n  <Input value={123} disabled />\n</Playground>","position":{"start":{"line":37,"column":1,"offset":733},"end":{"line":39,"column":14,"offset":792},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"只读","position":{"start":{"line":41,"column":5,"offset":798},"end":{"line":41,"column":7,"offset":800},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":794},"end":{"line":41,"column":7,"offset":800},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"设置readOnly只读属性不允许输入","position":{"start":{"line":42,"column":1,"offset":801},"end":{"line":42,"column":20,"offset":820},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":801},"end":{"line":42,"column":20,"offset":820},"indent":[]}},{"type":"jsx","value":"<Playground>\n  {\n    () => {\n      const [query, setquery] = React.useState('');\n      return (\n        <div style={{'marginLeft': '20px', 'marginTop': '10px'}}>\n          <Input placeholder=\"请输入内容\" value={query} onChange={(val) => setquery(val)} readOnly/>\n        </div>\n      )\n    }\n  }\n</Playground>","position":{"start":{"line":44,"column":1,"offset":822},"end":{"line":55,"column":14,"offset":1126},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"设置大小","position":{"start":{"line":57,"column":5,"offset":1132},"end":{"line":57,"column":9,"offset":1136},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1128},"end":{"line":57,"column":9,"offset":1136},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"设置size属性配置输入框的尺寸大小","position":{"start":{"line":58,"column":1,"offset":1137},"end":{"line":58,"column":19,"offset":1155},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1137},"end":{"line":58,"column":19,"offset":1155},"indent":[]}},{"type":"jsx","value":"<Playground>\n  <Input value={123} size={'large'} />\n  <Input value={123} size={'small'} />\n  <Input value={123} size={'mini'} />\n</Playground>","position":{"start":{"line":60,"column":1,"offset":1157},"end":{"line":64,"column":14,"offset":1299},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"多文本输入","position":{"start":{"line":66,"column":4,"offset":1304},"end":{"line":66,"column":9,"offset":1309},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1301},"end":{"line":66,"column":9,"offset":1309},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"使用textarea进行多长度内容输入","position":{"start":{"line":67,"column":1,"offset":1310},"end":{"line":67,"column":20,"offset":1329},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1310},"end":{"line":67,"column":20,"offset":1329},"indent":[]}},{"type":"jsx","value":"<Playground>\n  {\n    () => {\n      const [query, setquery] = React.useState('');\n      return (\n        <div style={{'marginLeft': '20px', 'marginTop': '10px'}}>\n          <Input type=\"textarea\" placeholder=\"请输入内容\" value={query} onChange={(val) => setquery(val) }/>\n        </div>\n      )\n    }\n  }\n</Playground>","position":{"start":{"line":69,"column":1,"offset":1331},"end":{"line":80,"column":14,"offset":1643},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"自适应高度","position":{"start":{"line":82,"column":4,"offset":1648},"end":{"line":82,"column":9,"offset":1653},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":1645},"end":{"line":82,"column":9,"offset":1653},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"设置autoSize属性自适应高度","position":{"start":{"line":83,"column":1,"offset":1654},"end":{"line":83,"column":18,"offset":1671},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":1654},"end":{"line":83,"column":18,"offset":1671},"indent":[]}},{"type":"jsx","value":"<Playground>\n  {\n    () => {\n      const [query, setquery] = React.useState('');\n      return (\n        <div style={{'marginLeft': '20px', 'marginTop': '10px'}}>\n          <Input type=\"textarea\" autoSize value={query} onChange={(val) => setquery(val) }/>\n        </div>\n      )\n    }\n  }\n</Playground>","position":{"start":{"line":85,"column":1,"offset":1673},"end":{"line":96,"column":14,"offset":1974},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"复合型输入框","position":{"start":{"line":98,"column":4,"offset":1979},"end":{"line":98,"column":10,"offset":1985},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":1976},"end":{"line":98,"column":10,"offset":1985},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"可以给输入框的前后设置内容","position":{"start":{"line":99,"column":1,"offset":1986},"end":{"line":99,"column":14,"offset":1999},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":1986},"end":{"line":99,"column":14,"offset":1999},"indent":[]}},{"type":"jsx","value":"<Playground>\n  {\n    () => {\n      const [query1, setquery1] = React.useState('');\n      const [query2, setquery2] = React.useState('');\n      const [query3, setquery3] = React.useState('');\n      function prependNode() {\n        return (\n          <span>http://</span>\n        )\n      }\n      function appendNode() {\n        return (\n          <span>.com</span>\n        )\n      }\n      return (\n        <div style={{'margin': '15px'}}>\n            <Input value={query1} placeholder={'请输入内容'} size={'large'} prepend={prependNode()} onChange={(val) => setquery1(val)} />\n            <Input value={query2} placeholder={'请输入内容'} size={'large'} append={appendNode()} onChange={(val) => setquery12(val)} style={{'marginTop': '10px'}}/>\n        </div>\n      )\n    }\n  }\n</Playground>","position":{"start":{"line":101,"column":1,"offset":2001},"end":{"line":125,"column":14,"offset":2778},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<!-- type: PropType.string,\n  icon: PropType.string,\n  disabled: PropType.bool,\n  placeholder: PropType.string,\n  readOnly: PropType.bool,\n  autoFocus: PropType.bool,\n  maxLength: PropType.number,\n  minLength: PropType.number,\n  value: PropType.any,\n  trim: PropType.bool,\n  size: PropType.oneOf(['large', 'small', 'mini']),\n  autoSize: PropType.bool,\n  prepend: PropType.node,\n  append: PropType.node,\n\n  // autocomplete attrs\n  rows: PropType.number,\n  resize: PropType.oneOf(['none', 'both', 'horizontal', 'vertical']),\n  autoComplete: PropType.string,\n\n  // input events\n  onFocus: PropType.func,\n  onBlur: PropType.func,\n  onChange: PropType.func,\n  onIconClick: PropType.func,\n  onMouseEnter: PropType.func,\n  onMouseLeave: PropType.func, -->","position":{"start":{"line":127,"column":1,"offset":2780},"end":{"line":153,"column":35,"offset":3528},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":155,"column":1,"offset":3530},"end":{"line":155,"column":31,"offset":3560},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":155,"column":31,"offset":3560}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/huijiawei/Documents/projects/hui-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport {Playground, Props} from 'docz';\nimport Input from './index.js';\nimport Button from '../button/index.js';\nimport '../../style/css/font-awesome.css';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"input-输入框\"\n    }}>{`Input 输入框`}</h1>\n    <p>{`结合textarea和input的输入框组件`}</p>\n    <h2 {...{\n      \"id\": \"基本使用\"\n    }}>{`基本使用`}</h2>\n    <h3 {...{\n      \"id\": \"普通输入框\"\n    }}>{`普通输入框`}</h3>\n    <p>{`设置placeholder,value,onchange属性组成输入框的基本功能`}</p>\n    <Playground __position={0} __code={'() => {\\n  const [query, setquery] = React.useState(\\'\\')\\n  return (\\n    <div style={{ marginLeft: \\'20px\\', marginTop: \\'10px\\' }}>\\n      <Input\\n        placeholder=\\\"请输入内容\\\"\\n        value={query}\\n        onChange={val => setquery(val)}\\n      />\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Input,\n      Button\n    }} mdxType=\"Playground\">\n  {() => {\n        const [query, setquery] = React.useState('');\n        return <div style={{\n          'marginLeft': '20px',\n          'marginTop': '10px'\n        }}>\n          <Input placeholder=\"请输入内容\" value={query} onChange={val => setquery(val)} mdxType=\"Input\" />\n        </div>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"输入禁用\"\n    }}>{`输入禁用`}</h3>\n    <p>{`disabled属性禁用输入框`}</p>\n    <Playground __position={1} __code={'<Input value={123} disabled />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Input,\n      Button\n    }} mdxType=\"Playground\">\n  <Input value={123} disabled mdxType=\"Input\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"只读\"\n    }}>{`只读`}</h3>\n    <p>{`设置readOnly只读属性不允许输入`}</p>\n    <Playground __position={2} __code={'() => {\\n  const [query, setquery] = React.useState(\\'\\')\\n  return (\\n    <div style={{ marginLeft: \\'20px\\', marginTop: \\'10px\\' }}>\\n      <Input\\n        placeholder=\\\"请输入内容\\\"\\n        value={query}\\n        onChange={val => setquery(val)}\\n        readOnly\\n      />\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Input,\n      Button\n    }} mdxType=\"Playground\">\n  {() => {\n        const [query, setquery] = React.useState('');\n        return <div style={{\n          'marginLeft': '20px',\n          'marginTop': '10px'\n        }}>\n          <Input placeholder=\"请输入内容\" value={query} onChange={val => setquery(val)} readOnly mdxType=\"Input\" />\n        </div>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"设置大小\"\n    }}>{`设置大小`}</h3>\n    <p>{`设置size属性配置输入框的尺寸大小`}</p>\n    <Playground __position={3} __code={'<Input value={123} size={\\'large\\'} />\\n<Input value={123} size={\\'small\\'} />\\n<Input value={123} size={\\'mini\\'} />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Input,\n      Button\n    }} mdxType=\"Playground\">\n  <Input value={123} size={'large'} mdxType=\"Input\" />\n  <Input value={123} size={'small'} mdxType=\"Input\" />\n  <Input value={123} size={'mini'} mdxType=\"Input\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"多文本输入\"\n    }}>{`多文本输入`}</h2>\n    <p>{`使用textarea进行多长度内容输入`}</p>\n    <Playground __position={4} __code={'() => {\\n  const [query, setquery] = React.useState(\\'\\')\\n  return (\\n    <div style={{ marginLeft: \\'20px\\', marginTop: \\'10px\\' }}>\\n      <Input\\n        type=\\\"textarea\\\"\\n        placeholder=\\\"请输入内容\\\"\\n        value={query}\\n        onChange={val => setquery(val)}\\n      />\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Input,\n      Button\n    }} mdxType=\"Playground\">\n  {() => {\n        const [query, setquery] = React.useState('');\n        return <div style={{\n          'marginLeft': '20px',\n          'marginTop': '10px'\n        }}>\n          <Input type=\"textarea\" placeholder=\"请输入内容\" value={query} onChange={val => setquery(val)} mdxType=\"Input\" />\n        </div>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"自适应高度\"\n    }}>{`自适应高度`}</h2>\n    <p>{`设置autoSize属性自适应高度`}</p>\n    <Playground __position={5} __code={'() => {\\n  const [query, setquery] = React.useState(\\'\\')\\n  return (\\n    <div style={{ marginLeft: \\'20px\\', marginTop: \\'10px\\' }}>\\n      <Input\\n        type=\\\"textarea\\\"\\n        autoSize\\n        value={query}\\n        onChange={val => setquery(val)}\\n      />\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Input,\n      Button\n    }} mdxType=\"Playground\">\n  {() => {\n        const [query, setquery] = React.useState('');\n        return <div style={{\n          'marginLeft': '20px',\n          'marginTop': '10px'\n        }}>\n          <Input type=\"textarea\" autoSize value={query} onChange={val => setquery(val)} mdxType=\"Input\" />\n        </div>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"复合型输入框\"\n    }}>{`复合型输入框`}</h2>\n    <p>{`可以给输入框的前后设置内容`}</p>\n    <Playground __position={6} __code={'() => {\\n  const [query1, setquery1] = React.useState(\\'\\')\\n  const [query2, setquery2] = React.useState(\\'\\')\\n  const [query3, setquery3] = React.useState(\\'\\')\\n  function prependNode() {\\n    return <span>http://</span>\\n  }\\n  function appendNode() {\\n    return <span>.com</span>\\n  }\\n  return (\\n    <div style={{ margin: \\'15px\\' }}>\\n      <Input\\n        value={query1}\\n        placeholder={\\'请输入内容\\'}\\n        size={\\'large\\'}\\n        prepend={prependNode()}\\n        onChange={val => setquery1(val)}\\n      />\\n      <Input\\n        value={query2}\\n        placeholder={\\'请输入内容\\'}\\n        size={\\'large\\'}\\n        append={appendNode()}\\n        onChange={val => setquery12(val)}\\n        style={{ marginTop: \\'10px\\' }}\\n      />\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Input,\n      Button\n    }} mdxType=\"Playground\">\n  {() => {\n        const [query1, setquery1] = React.useState('');\n        const [query2, setquery2] = React.useState('');\n        const [query3, setquery3] = React.useState('');\n\n        function prependNode() {\n          return <span>http://</span>;\n        }\n\n        function appendNode() {\n          return <span>.com</span>;\n        }\n\n        return <div style={{\n          'margin': '15px'\n        }}>\n            <Input value={query1} placeholder={'请输入内容'} size={'large'} prepend={prependNode()} onChange={val => setquery1(val)} mdxType=\"Input\" />\n            <Input value={query2} placeholder={'请输入内容'} size={'large'} append={appendNode()} onChange={val => setquery12(val)} style={{\n            'marginTop': '10px'\n          }} mdxType=\"Input\" />\n        </div>;\n      }}\n    </Playground>\n    {\n      /* type: PropType.string,\n       icon: PropType.string,\n       disabled: PropType.bool,\n       placeholder: PropType.string,\n       readOnly: PropType.bool,\n       autoFocus: PropType.bool,\n       maxLength: PropType.number,\n       minLength: PropType.number,\n       value: PropType.any,\n       trim: PropType.bool,\n       size: PropType.oneOf(['large', 'small', 'mini']),\n       autoSize: PropType.bool,\n       prepend: PropType.node,\n       append: PropType.node,\n        // autocomplete attrs\n       rows: PropType.number,\n       resize: PropType.oneOf(['none', 'both', 'horizontal', 'vertical']),\n       autoComplete: PropType.string,\n        // input events\n       onFocus: PropType.func,\n       onBlur: PropType.func,\n       onChange: PropType.func,\n       onIconClick: PropType.func,\n       onMouseEnter: PropType.func,\n       onMouseLeave: PropType.func, */\n    }\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}