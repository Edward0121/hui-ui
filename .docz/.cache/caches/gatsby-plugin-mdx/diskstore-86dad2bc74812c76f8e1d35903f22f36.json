{"expireTime":9007200842904188000,"key":"gatsby-plugin-mdx-entire-payload-294eca4af37f6be2b11b464c87316059-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/huijiawei/Documents/projects/hui-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":121,"offset":122},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":124},"end":{"line":5,"column":29,"offset":152},"indent":[]}},{"type":"import","value":"import {Playground, Props} from 'docz';\nimport Tabs from './index.js';\nimport '../../style/css/font-awesome.css';","position":{"start":{"line":8,"column":1,"offset":155},"end":{"line":10,"column":43,"offset":268},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Tabs 标签栏","position":{"start":{"line":12,"column":3,"offset":272},"end":{"line":12,"column":11,"offset":280},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":270},"end":{"line":12,"column":11,"offset":280},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"多标签页切换多标签栏","position":{"start":{"line":13,"column":1,"offset":281},"end":{"line":13,"column":11,"offset":291},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":281},"end":{"line":13,"column":11,"offset":291},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"基本使用","position":{"start":{"line":16,"column":4,"offset":297},"end":{"line":16,"column":8,"offset":301},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":294},"end":{"line":16,"column":8,"offset":301},"indent":[]}},{"type":"jsx","value":"<Playground>\n  {\n    () => {\n      let id = 4;\n      const [tablist, settablist] = React.useState([\n        {\n          name: '标签1',\n          value: '1',\n        },\n        {\n          name: '标签2',\n          value: '2',\n        },\n        {\n          name: '标签3',\n          value: '3',\n        }\n      ])\n      function tabAdd() {\n        let _list = tablist.slice();\n        _list.push({\n          value: `${id}`,\n          name: `标签${id++}`\n        })\n        settablist(_list);\n      }\n      return (\n        <div style={{'margin': '10px'}}>\n          <Tabs onTabAdd={this.tabAdd} type=\"border-card\" currentName=\"1\">\n            {\n              _tablist.map((item, index) => {\n                return (\n                  <Tabs.Pane key={index} label={`${item.name}`} name={`${index}`}>{item.name}</Tabs.Pane>\n                )\n              })\n            }\n          </Tabs>\n        </div>\n      )\n    }\n  }\n</Playground>","position":{"start":{"line":18,"column":1,"offset":303},"end":{"line":59,"column":14,"offset":1228},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":62,"column":1,"offset":1231},"end":{"line":62,"column":31,"offset":1261},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":62,"column":31,"offset":1261}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/huijiawei/Documents/projects/hui-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport {Playground, Props} from 'docz';\nimport Tabs from './index.js';\nimport '../../style/css/font-awesome.css';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"tabs-标签栏\"\n    }}>{`Tabs 标签栏`}</h1>\n    <p>{`多标签页切换多标签栏`}</p>\n    <h2 {...{\n      \"id\": \"基本使用\"\n    }}>{`基本使用`}</h2>\n    <Playground __position={0} __code={'() => {\\n  let id = 4\\n  const [tablist, settablist] = React.useState([\\n    {\\n      name: \\'标签1\\',\\n      value: \\'1\\',\\n    },\\n    {\\n      name: \\'标签2\\',\\n      value: \\'2\\',\\n    },\\n    {\\n      name: \\'标签3\\',\\n      value: \\'3\\',\\n    },\\n  ])\\n  function tabAdd() {\\n    let _list = tablist.slice()\\n    _list.push({\\n      value: `${id}`,\\n      name: `标签${id++}`,\\n    })\\n    settablist(_list)\\n  }\\n  return (\\n    <div style={{ margin: \\'10px\\' }}>\\n      <Tabs onTabAdd={this.tabAdd} type=\\\"border-card\\\" currentName=\\\"1\\\">\\n        {_tablist.map((item, index) => {\\n          return (\\n            <Tabs.Pane key={index} label={`${item.name}`} name={`${index}`}>\\n              {item.name}\\n            </Tabs.Pane>\\n          )\\n        })}\\n      </Tabs>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Tabs\n    }} mdxType=\"Playground\">\n  {() => {\n        let id = 4;\n        const [tablist, settablist] = React.useState([{\n          name: '标签1',\n          value: '1'\n        }, {\n          name: '标签2',\n          value: '2'\n        }, {\n          name: '标签3',\n          value: '3'\n        }]);\n\n        function tabAdd() {\n          let _list = tablist.slice();\n\n          _list.push({\n            value: `${id}`,\n            name: `标签${id++}`\n          });\n\n          settablist(_list);\n        }\n\n        return <div style={{\n          'margin': '10px'\n        }}>\n          <Tabs onTabAdd={this.tabAdd} type=\"border-card\" currentName=\"1\" mdxType=\"Tabs\">\n            {_tablist.map((item, index) => {\n              return <Tabs.Pane key={index} label={`${item.name}`} name={`${index}`}>{item.name}</Tabs.Pane>;\n            })}\n          </Tabs>\n        </div>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}