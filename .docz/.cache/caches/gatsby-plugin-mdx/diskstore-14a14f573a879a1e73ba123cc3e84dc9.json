{"expireTime":9007200842739805000,"key":"gatsby-plugin-mdx-entire-payload-cc33f61fd42646b3ec035350559c48a5-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/huijiawei/Documents/projects/hui-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":121,"offset":122},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":124},"end":{"line":5,"column":29,"offset":152},"indent":[]}},{"type":"import","value":"import {Playground, Props} from 'docz';\nimport Button from '../button/index';\nimport Notification from './index.js';\nimport '../../style/css/font-awesome.css';","position":{"start":{"line":8,"column":1,"offset":155},"end":{"line":11,"column":43,"offset":314},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Notification 通知","position":{"start":{"line":14,"column":3,"offset":319},"end":{"line":14,"column":18,"offset":334},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":317},"end":{"line":14,"column":18,"offset":334},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"对于需要提示的信息进行通知","position":{"start":{"line":15,"column":1,"offset":335},"end":{"line":15,"column":14,"offset":348},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":335},"end":{"line":15,"column":14,"offset":348},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"基本使用","position":{"start":{"line":17,"column":4,"offset":353},"end":{"line":17,"column":8,"offset":357},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":350},"end":{"line":17,"column":8,"offset":357},"indent":[]}},{"type":"jsx","value":"<Playground>\n  {\n    () => {\n      const [visible, setvisible] = React.useState(false);\n      function successNoticer() {\n        return Notification.success({\n          title: '成功提示',\n          msg: '这是一条成功提示',\n          duration: 3000,\n        })\n      }\n      function infoNoticer() {\n        return Notification.info({\n          title: '信息提示',\n          msg: '这是一条信息提示',\n          duration: 4000,\n        })\n      }\n      function warningNoticer() {\n        return Notification.warning({\n          title: '警告提示',\n          msg: '这是一条警告提示',\n          duration: 5000,\n        })\n      }\n      function errorNoticer() {\n        return Notification.error({\n          title: '错误提示',\n          msg: '这是一条错误提示',\n          duration: 6000,\n        })\n      }\n      return (\n        <div style={{'marginBottom': '10px', 'marginTop': '10px', 'marginLeft': '10px'}}>\n          <Button type={\"success\"} onClick={() => successNoticer()}>成功通知</Button>\n          <Button type={\"info\"} onClick={() => infoNoticer()}>普通通知</Button>\n          <Button type={\"warning\"} onClick={() => warningNoticer()}>警告通知</Button>\n          <Button type={\"danger\"} onClick={() => errorNoticer()}>错误通知</Button>\n        </div>\n      )\n    }\n  }\n</Playground>","position":{"start":{"line":19,"column":1,"offset":359},"end":{"line":61,"column":14,"offset":1583},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"自定义高度","position":{"start":{"line":63,"column":4,"offset":1588},"end":{"line":63,"column":9,"offset":1593},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":1585},"end":{"line":63,"column":9,"offset":1593},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"设置top属性配置提示之间的距离","position":{"start":{"line":64,"column":1,"offset":1594},"end":{"line":64,"column":17,"offset":1610},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1594},"end":{"line":64,"column":17,"offset":1610},"indent":[]}},{"type":"jsx","value":"<Playground>\n  {\n    () => {\n      const [visible, setvisible] = React.useState(false);\n      function successNoticer() {\n        return Notification.success({\n          title: '成功提示',\n          msg: '这是一条成功提示',\n          duration: 3000,\n          top: 30,\n        })\n      }\n      return (\n        <div style={{'marginBottom': '10px', 'marginTop': '10px', 'marginLeft': '10px'}}>\n          <Button type={\"success\"} onClick={() => successNoticer()}>成功通知</Button>\n        </div>\n      )\n    }\n  }\n</Playground>","position":{"start":{"line":66,"column":1,"offset":1612},"end":{"line":85,"column":14,"offset":2121},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":87,"column":1,"offset":2123},"end":{"line":87,"column":31,"offset":2153},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":87,"column":31,"offset":2153}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/huijiawei/Documents/projects/hui-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport {Playground, Props} from 'docz';\nimport Button from '../button/index';\nimport Notification from './index.js';\nimport '../../style/css/font-awesome.css';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"notification-通知\"\n    }}>{`Notification 通知`}</h1>\n    <p>{`对于需要提示的信息进行通知`}</p>\n    <h2 {...{\n      \"id\": \"基本使用\"\n    }}>{`基本使用`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [visible, setvisible] = React.useState(false)\\n  function successNoticer() {\\n    return Notification.success({\\n      title: \\'成功提示\\',\\n      msg: \\'这是一条成功提示\\',\\n      duration: 3000,\\n    })\\n  }\\n  function infoNoticer() {\\n    return Notification.info({\\n      title: \\'信息提示\\',\\n      msg: \\'这是一条信息提示\\',\\n      duration: 4000,\\n    })\\n  }\\n  function warningNoticer() {\\n    return Notification.warning({\\n      title: \\'警告提示\\',\\n      msg: \\'这是一条警告提示\\',\\n      duration: 5000,\\n    })\\n  }\\n  function errorNoticer() {\\n    return Notification.error({\\n      title: \\'错误提示\\',\\n      msg: \\'这是一条错误提示\\',\\n      duration: 6000,\\n    })\\n  }\\n  return (\\n    <div\\n      style={{ marginBottom: \\'10px\\', marginTop: \\'10px\\', marginLeft: \\'10px\\' }}\\n    >\\n      <Button type={\\'success\\'} onClick={() => successNoticer()}>\\n        成功通知\\n      </Button>\\n      <Button type={\\'info\\'} onClick={() => infoNoticer()}>\\n        普通通知\\n      </Button>\\n      <Button type={\\'warning\\'} onClick={() => warningNoticer()}>\\n        警告通知\\n      </Button>\\n      <Button type={\\'danger\\'} onClick={() => errorNoticer()}>\\n        错误通知\\n      </Button>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Notification\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setvisible] = React.useState(false);\n\n        function successNoticer() {\n          return Notification.success({\n            title: '成功提示',\n            msg: '这是一条成功提示',\n            duration: 3000\n          });\n        }\n\n        function infoNoticer() {\n          return Notification.info({\n            title: '信息提示',\n            msg: '这是一条信息提示',\n            duration: 4000\n          });\n        }\n\n        function warningNoticer() {\n          return Notification.warning({\n            title: '警告提示',\n            msg: '这是一条警告提示',\n            duration: 5000\n          });\n        }\n\n        function errorNoticer() {\n          return Notification.error({\n            title: '错误提示',\n            msg: '这是一条错误提示',\n            duration: 6000\n          });\n        }\n\n        return <div style={{\n          'marginBottom': '10px',\n          'marginTop': '10px',\n          'marginLeft': '10px'\n        }}>\n          <Button type={\"success\"} onClick={() => successNoticer()} mdxType=\"Button\">成功通知</Button>\n          <Button type={\"info\"} onClick={() => infoNoticer()} mdxType=\"Button\">普通通知</Button>\n          <Button type={\"warning\"} onClick={() => warningNoticer()} mdxType=\"Button\">警告通知</Button>\n          <Button type={\"danger\"} onClick={() => errorNoticer()} mdxType=\"Button\">错误通知</Button>\n        </div>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"自定义高度\"\n    }}>{`自定义高度`}</h2>\n    <p>{`设置top属性配置提示之间的距离`}</p>\n    <Playground __position={1} __code={'() => {\\n  const [visible, setvisible] = React.useState(false)\\n  function successNoticer() {\\n    return Notification.success({\\n      title: \\'成功提示\\',\\n      msg: \\'这是一条成功提示\\',\\n      duration: 3000,\\n      top: 30,\\n    })\\n  }\\n  return (\\n    <div\\n      style={{ marginBottom: \\'10px\\', marginTop: \\'10px\\', marginLeft: \\'10px\\' }}\\n    >\\n      <Button type={\\'success\\'} onClick={() => successNoticer()}>\\n        成功通知\\n      </Button>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Notification\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setvisible] = React.useState(false);\n\n        function successNoticer() {\n          return Notification.success({\n            title: '成功提示',\n            msg: '这是一条成功提示',\n            duration: 3000,\n            top: 30\n          });\n        }\n\n        return <div style={{\n          'marginBottom': '10px',\n          'marginTop': '10px',\n          'marginLeft': '10px'\n        }}>\n          <Button type={\"success\"} onClick={() => successNoticer()} mdxType=\"Button\">成功通知</Button>\n        </div>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}