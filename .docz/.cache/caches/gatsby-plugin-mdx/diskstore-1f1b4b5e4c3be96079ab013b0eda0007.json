{"expireTime":9007200842393279000,"key":"gatsby-plugin-mdx-entire-payload-16d8c9e669e1bc64ceef3f17de00ded8-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/huijiawei/Documents/projects/hui-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":121,"offset":122},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":124},"end":{"line":5,"column":29,"offset":152},"indent":[]}},{"type":"import","value":"import {Playground} from 'docz';\nimport Switch from './index.js';\nimport '../../style/css/font-awesome.css';","position":{"start":{"line":8,"column":1,"offset":155},"end":{"line":10,"column":43,"offset":263},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Switch","position":{"start":{"line":12,"column":3,"offset":267},"end":{"line":12,"column":9,"offset":273},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":265},"end":{"line":12,"column":9,"offset":273},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"基本使用","position":{"start":{"line":14,"column":4,"offset":278},"end":{"line":14,"column":8,"offset":282},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":275},"end":{"line":14,"column":8,"offset":282},"indent":[]}},{"type":"jsx","value":"<Playground>\n {\n   () => {\n    const [checked, setchecked] = React.useState(false);\n    return (\n      <div style={{'marginLeft': '20px', 'marginTop': '10px'}}>\n        <Switch value={checked} />\n        <Switch value={!checked} style={{'marginLeft': '20px'}} />\n      </div>\n    )\n   }\n }\n</Playground>","position":{"start":{"line":16,"column":1,"offset":284},"end":{"line":28,"column":14,"offset":587},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"禁用状态","position":{"start":{"line":30,"column":4,"offset":592},"end":{"line":30,"column":8,"offset":596},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":589},"end":{"line":30,"column":8,"offset":596},"indent":[]}},{"type":"jsx","value":"<Playground>\n    <div style={{'marginLeft': '20px', 'marginTop': '10px'}}>\n      <Switch value={true} disabled />\n      <Switch style={{'marginLeft': '20px'}} value={false} disabled />\n    </div>\n</Playground>","position":{"start":{"line":32,"column":1,"offset":598},"end":{"line":37,"column":14,"offset":807},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"自定义设置属性","position":{"start":{"line":40,"column":4,"offset":813},"end":{"line":40,"column":11,"offset":820},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":810},"end":{"line":40,"column":11,"offset":820},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"自定义开启和关闭值显示","position":{"start":{"line":42,"column":5,"offset":826},"end":{"line":42,"column":16,"offset":837},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":822},"end":{"line":42,"column":16,"offset":837},"indent":[]}},{"type":"jsx","value":"<Playground>\n {\n   () => {\n    const [checked, setchecked] = React.useState('ok');\n    return (\n      <div style={{'marginLeft': '20px', 'marginTop': '10px'}}>\n        <Switch value={checked} onValue={'ok'} offValue={'off'} onChange={() => setchecked(checked == 'ok' ? 'off' : 'ok')}/>\n      </div>\n    )\n   } \n }\n</Playground>","position":{"start":{"line":44,"column":1,"offset":839},"end":{"line":55,"column":14,"offset":1166},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"自定义开启和关闭文本显示","position":{"start":{"line":57,"column":5,"offset":1172},"end":{"line":57,"column":17,"offset":1184},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1168},"end":{"line":57,"column":17,"offset":1184},"indent":[]}},{"type":"jsx","value":"<Playground>\n {\n   () => {\n    const [checked, setchecked] = React.useState(false);\n    return (\n      <div style={{'marginLeft': '20px'}}>\n        <Switch value={checked} onText={'ok'} offText={'off'} onChange={() => setchecked(!checked)}/>\n      </div>\n    )\n   } \n }\n</Playground>","position":{"start":{"line":59,"column":1,"offset":1186},"end":{"line":70,"column":14,"offset":1469},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"自定义开启和关闭颜色显示","position":{"start":{"line":72,"column":5,"offset":1475},"end":{"line":72,"column":17,"offset":1487},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":1471},"end":{"line":72,"column":17,"offset":1487},"indent":[]}},{"type":"jsx","value":"<Playground>\n {\n   () => {\n    const [checked, setchecked] = React.useState(false);\n    return (\n      <div style={{'marginLeft': '20px'}}>\n        <Switch value={checked} onColor={'#50bfff'} offColor={'#ff4949'} onChange={() => setchecked(!checked)}/>\n      </div>\n    )\n   } \n }\n</Playground>","position":{"start":{"line":74,"column":1,"offset":1489},"end":{"line":85,"column":14,"offset":1783},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":87,"column":1,"offset":1785},"end":{"line":87,"column":31,"offset":1815},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":87,"column":31,"offset":1815}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/huijiawei/Documents/projects/hui-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport {Playground} from 'docz';\nimport Switch from './index.js';\nimport '../../style/css/font-awesome.css';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"switch\"\n    }}>{`Switch`}</h1>\n    <h2 {...{\n      \"id\": \"基本使用\"\n    }}>{`基本使用`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [checked, setchecked] = React.useState(false)\\n  return (\\n    <div style={{ marginLeft: \\'20px\\', marginTop: \\'10px\\' }}>\\n      <Switch value={checked} />\\n      <Switch value={!checked} style={{ marginLeft: \\'20px\\' }} />\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Switch\n    }} mdxType=\"Playground\">\n {() => {\n        const [checked, setchecked] = React.useState(false);\n        return <div style={{\n          'marginLeft': '20px',\n          'marginTop': '10px'\n        }}>\n        <Switch value={checked} mdxType=\"Switch\" />\n        <Switch value={!checked} style={{\n            'marginLeft': '20px'\n          }} mdxType=\"Switch\" />\n      </div>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"禁用状态\"\n    }}>{`禁用状态`}</h2>\n    <Playground __position={1} __code={'<div style={{ marginLeft: \\'20px\\', marginTop: \\'10px\\' }}>\\n  <Switch value={true} disabled />\\n  <Switch style={{ marginLeft: \\'20px\\' }} value={false} disabled />\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Switch\n    }} mdxType=\"Playground\">\n    <div style={{\n        'marginLeft': '20px',\n        'marginTop': '10px'\n      }}>\n      <Switch value={true} disabled mdxType=\"Switch\" />\n      <Switch style={{\n          'marginLeft': '20px'\n        }} value={false} disabled mdxType=\"Switch\" />\n    </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"自定义设置属性\"\n    }}>{`自定义设置属性`}</h2>\n    <h3 {...{\n      \"id\": \"自定义开启和关闭值显示\"\n    }}>{`自定义开启和关闭值显示`}</h3>\n    <Playground __position={2} __code={'() => {\\n  const [checked, setchecked] = React.useState(\\'ok\\')\\n  return (\\n    <div style={{ marginLeft: \\'20px\\', marginTop: \\'10px\\' }}>\\n      <Switch\\n        value={checked}\\n        onValue={\\'ok\\'}\\n        offValue={\\'off\\'}\\n        onChange={() => setchecked(checked == \\'ok\\' ? \\'off\\' : \\'ok\\')}\\n      />\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Switch\n    }} mdxType=\"Playground\">\n {() => {\n        const [checked, setchecked] = React.useState('ok');\n        return <div style={{\n          'marginLeft': '20px',\n          'marginTop': '10px'\n        }}>\n        <Switch value={checked} onValue={'ok'} offValue={'off'} onChange={() => setchecked(checked == 'ok' ? 'off' : 'ok')} mdxType=\"Switch\" />\n      </div>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"自定义开启和关闭文本显示\"\n    }}>{`自定义开启和关闭文本显示`}</h3>\n    <Playground __position={3} __code={'() => {\\n  const [checked, setchecked] = React.useState(false)\\n  return (\\n    <div style={{ marginLeft: \\'20px\\' }}>\\n      <Switch\\n        value={checked}\\n        onText={\\'ok\\'}\\n        offText={\\'off\\'}\\n        onChange={() => setchecked(!checked)}\\n      />\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Switch\n    }} mdxType=\"Playground\">\n {() => {\n        const [checked, setchecked] = React.useState(false);\n        return <div style={{\n          'marginLeft': '20px'\n        }}>\n        <Switch value={checked} onText={'ok'} offText={'off'} onChange={() => setchecked(!checked)} mdxType=\"Switch\" />\n      </div>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"自定义开启和关闭颜色显示\"\n    }}>{`自定义开启和关闭颜色显示`}</h3>\n    <Playground __position={4} __code={'() => {\\n  const [checked, setchecked] = React.useState(false)\\n  return (\\n    <div style={{ marginLeft: \\'20px\\' }}>\\n      <Switch\\n        value={checked}\\n        onColor={\\'#50bfff\\'}\\n        offColor={\\'#ff4949\\'}\\n        onChange={() => setchecked(!checked)}\\n      />\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Switch\n    }} mdxType=\"Playground\">\n {() => {\n        const [checked, setchecked] = React.useState(false);\n        return <div style={{\n          'marginLeft': '20px'\n        }}>\n        <Switch value={checked} onColor={'#50bfff'} offColor={'#ff4949'} onChange={() => setchecked(!checked)} mdxType=\"Switch\" />\n      </div>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}