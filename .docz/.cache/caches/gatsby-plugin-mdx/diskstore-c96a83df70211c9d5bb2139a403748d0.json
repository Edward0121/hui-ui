{"expireTime":9007200842300492000,"key":"gatsby-plugin-mdx-entire-payload-3795c532fc760c3651bd1342a246b6b7-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/huijiawei/Documents/projects/hui-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":121,"offset":122},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":124},"end":{"line":5,"column":29,"offset":152},"indent":[]}},{"type":"import","value":"import {Playground, Props} from 'docz';\nimport Loading from './index.js';\nimport '../../style/css/font-awesome.css';","position":{"start":{"line":8,"column":1,"offset":155},"end":{"line":10,"column":43,"offset":271},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Loading 加载","position":{"start":{"line":12,"column":3,"offset":275},"end":{"line":12,"column":13,"offset":285},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":273},"end":{"line":12,"column":13,"offset":285},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"用于在页面内容未加载完成时进行加载显示","position":{"start":{"line":13,"column":1,"offset":286},"end":{"line":13,"column":20,"offset":305},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":286},"end":{"line":13,"column":20,"offset":305},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"基本用法","position":{"start":{"line":16,"column":4,"offset":311},"end":{"line":16,"column":8,"offset":315},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":308},"end":{"line":16,"column":8,"offset":315},"indent":[]}},{"type":"jsx","value":"<Playground>\n  <Loading loading={true}>\n    <div style={{'width': '100%', 'height': '200px'}}>\n      <center>loading组件</center>\n    </div>\n  </Loading>\n</Playground>","position":{"start":{"line":17,"column":1,"offset":316},"end":{"line":23,"column":14,"offset":481},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"全屏加载","position":{"start":{"line":26,"column":4,"offset":487},"end":{"line":26,"column":8,"offset":491},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":484},"end":{"line":26,"column":8,"offset":491},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"设置","position":{"start":{"line":27,"column":1,"offset":492},"end":{"line":27,"column":3,"offset":494},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"fullscreen","position":{"start":{"line":27,"column":5,"offset":496},"end":{"line":27,"column":15,"offset":506},"indent":[]}}],"position":{"start":{"line":27,"column":3,"offset":494},"end":{"line":27,"column":17,"offset":508},"indent":[]}},{"type":"text","value":"属性实现页面的loading","position":{"start":{"line":27,"column":17,"offset":508},"end":{"line":27,"column":31,"offset":522},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":492},"end":{"line":27,"column":31,"offset":522},"indent":[]}},{"type":"jsx","value":"<Playground>\n  {\n    () => {\n      const [isloading, setisloading] = React.useState(true);\n      function timeout() {\n        setTimeOut(() => {\n          setisloading(false)\n        }, 3000)\n      }\n      timeout();\n      return (\n        <Loading fullScreen loading={isloading}>\n          <div style={{'width': '100%', 'height': '200px'}}>\n            <center>loading组件</center>\n          </div>\n        </Loading>\n      )\n    }\n  }\n</Playground>","position":{"start":{"line":29,"column":1,"offset":524},"end":{"line":48,"column":14,"offset":972},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"全屏加载且不可滚动","position":{"start":{"line":50,"column":4,"offset":977},"end":{"line":50,"column":13,"offset":986},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":974},"end":{"line":50,"column":13,"offset":986},"indent":[]}},{"type":"jsx","value":"<Playground>\n  <Loading loading={true}>\n    <div style={{'width': '100%', 'height': '200px', 'overflow': 'scroll'}}>\n      {\n        new Array(200).map((item, index) => index + 1).map((item) => {\n          return (\n            <div>{item}</div>\n          )\n        })\n      }\n    </div>\n  </Loading>\n</Playground>","position":{"start":{"line":52,"column":1,"offset":988},"end":{"line":64,"column":14,"offset":1301},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":66,"column":1,"offset":1303},"end":{"line":66,"column":31,"offset":1333},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":66,"column":31,"offset":1333}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/huijiawei/Documents/projects/hui-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport {Playground, Props} from 'docz';\nimport Loading from './index.js';\nimport '../../style/css/font-awesome.css';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"loading-加载\"\n    }}>{`Loading 加载`}</h1>\n    <p>{`用于在页面内容未加载完成时进行加载显示`}</p>\n    <h2 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h2>\n    <Playground __position={0} __code={'<Loading loading={true}>\\n  <div style={{ width: \\'100%\\', height: \\'200px\\' }}>\\n    <center>loading组件</center>\\n  </div>\\n</Loading>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Loading\n    }} mdxType=\"Playground\">\n  <Loading loading={true} mdxType=\"Loading\">\n    <div style={{\n          'width': '100%',\n          'height': '200px'\n        }}>\n      <center>loading组件</center>\n    </div>\n  </Loading>\n    </Playground>\n    <h2 {...{\n      \"id\": \"全屏加载\"\n    }}>{`全屏加载`}</h2>\n    <p>{`设置`}<strong parentName=\"p\">{`fullscreen`}</strong>{`属性实现页面的loading`}</p>\n    <Playground __position={1} __code={'() => {\\n  const [isloading, setisloading] = React.useState(true)\\n  function timeout() {\\n    setTimeOut(() => {\\n      setisloading(false)\\n    }, 3000)\\n  }\\n  timeout()\\n  return (\\n    <Loading fullScreen loading={isloading}>\\n      <div style={{ width: \\'100%\\', height: \\'200px\\' }}>\\n        <center>loading组件</center>\\n      </div>\\n    </Loading>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Loading\n    }} mdxType=\"Playground\">\n  {() => {\n        const [isloading, setisloading] = React.useState(true);\n\n        function timeout() {\n          setTimeOut(() => {\n            setisloading(false);\n          }, 3000);\n        }\n\n        timeout();\n        return <Loading fullScreen loading={isloading} mdxType=\"Loading\">\n          <div style={{\n            'width': '100%',\n            'height': '200px'\n          }}>\n            <center>loading组件</center>\n          </div>\n        </Loading>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"全屏加载且不可滚动\"\n    }}>{`全屏加载且不可滚动`}</h2>\n    <Playground __position={2} __code={'<Loading loading={true}>\\n  <div style={{ width: \\'100%\\', height: \\'200px\\', overflow: \\'scroll\\' }}>\\n    {new Array(200)\\n      .map((item, index) => index + 1)\\n      .map(item => {\\n        return <div>{item}</div>\\n      })}\\n  </div>\\n</Loading>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Loading\n    }} mdxType=\"Playground\">\n  <Loading loading={true} mdxType=\"Loading\">\n    <div style={{\n          'width': '100%',\n          'height': '200px',\n          'overflow': 'scroll'\n        }}>\n      {new Array(200).map((item, index) => index + 1).map(item => {\n            return <div>{item}</div>;\n          })}\n    </div>\n  </Loading>\n    </Playground>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}