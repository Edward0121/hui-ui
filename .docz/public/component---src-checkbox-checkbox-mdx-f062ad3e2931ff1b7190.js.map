{"version":3,"sources":["webpack:///../src/checkbox/checkbox.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","Checkbox","checked","style","disabled","Group","value","label","React","checkAll","setcheckAll","cities","checkedCities","setcheckedCities","isIndeterminate","setisIndeterminate","indeterminate","onChange","checkedCount","length","citiesLength","handleCheckedCitiesChange","map","city","index","key","parentName","isMDXComponent"],"mappings":"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","file":"component---src-checkbox-checkbox-mdx-f062ad3e2931ff1b7190.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/huijiawei/Documents/projects/hui-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Checkbox from './index.js';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"checkbox-单选框\"\n    }}>{`Checkbox 单选框`}</h1>\n    <p>{`实现多种场景的内容单选`}</p>\n    <h2 {...{\n      \"id\": \"基本使用\"\n    }}>{`基本使用`}</h2>\n    <p>{`单独使用可以表示两种状态之间的切换。`}</p>\n    <Playground __position={0} __code={'<Checkbox checked style={{ marginLeft: \\'20px\\' }}>\\n  选中状态\\n</Checkbox>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Checkbox\n    }} mdxType=\"Playground\">\n  <Checkbox checked style={{\n        'marginLeft': '20px'\n      }} mdxType=\"Checkbox\">选中状态</Checkbox>\n    </Playground>\n    <h2 {...{\n      \"id\": \"禁用状态\"\n    }}>{`禁用状态`}</h2>\n    <p>{`多选框不可用状态。`}</p>\n    <Playground __position={1} __code={'<Checkbox disabled style={{ marginLeft: \\'20px\\', marginRight: \\'20px\\' }}>\\n  未选中禁用状态\\n</Checkbox>\\n<Checkbox checked disabled>\\n  选中禁用状态\\n</Checkbox>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Checkbox\n    }} mdxType=\"Playground\">\n  <Checkbox disabled style={{\n        'marginLeft': '20px',\n        'marginRight': '20px'\n      }} mdxType=\"Checkbox\">未选中禁用状态</Checkbox>\n  <Checkbox checked disabled mdxType=\"Checkbox\">选中禁用状态</Checkbox>\n    </Playground>\n    <h2 {...{\n      \"id\": \"多选框组\"\n    }}>{`多选框组`}</h2>\n    <p>{`适用于多个勾选框绑定到同一个数组的情景`}</p>\n    <Playground __position={2} __code={'<Checkbox.Group value={[\\'2\\']} style={{ marginLeft: \\'20px\\' }}>\\n  <Checkbox label=\\\"1\\\"></Checkbox>\\n  <Checkbox label=\\\"2\\\"></Checkbox>\\n  <Checkbox label=\\\"3\\\"></Checkbox>\\n</Checkbox.Group>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Checkbox\n    }} mdxType=\"Playground\">\n    <Checkbox.Group value={[\"2\"]} style={{\n        'marginLeft': '20px'\n      }}>\n      <Checkbox label=\"1\" mdxType=\"Checkbox\"></Checkbox>\n      <Checkbox label=\"2\" mdxType=\"Checkbox\"></Checkbox>\n      <Checkbox label=\"3\" mdxType=\"Checkbox\"></Checkbox>\n    </Checkbox.Group>\n    </Playground>\n    <h2 {...{\n      \"id\": \"indeterminate状态\"\n    }}>{`indeterminate状态`}</h2>\n    <p>{`用于表示多选框的不确定状态`}</p>\n    <Playground __position={3} __code={'() => {\\n  const [checkAll, setcheckAll] = React.useState(false)\\n  const [cities, setcities] = React.useState([\\'上海\\', \\'北京\\', \\'广州\\', \\'深圳\\'])\\n  const [checkedCities, setcheckedCities] = React.useState([\\'上海\\', \\'北京\\'])\\n  const [isIndeterminate, setisIndeterminate] = React.useState(true)\\n  function handleCheckAllChange(checked) {\\n    setisIndeterminate(false)\\n    setcheckAll(checked)\\n    setcheckedCities(checked ? [\\'上海\\', \\'北京\\', \\'广州\\', \\'深圳\\'] : [])\\n  }\\n  function handleCheckedCitiesChange(value) {\\n    const checkedCount = value.length\\n    const citiesLength = cities.length\\n    setcheckedCities(value)\\n    setcheckAll(checkedCount === citiesLength)\\n    setisIndeterminate(checkedCount > 0 && checkedCount < citiesLength)\\n  }\\n  return (\\n    <div style={{ marginLeft: \\'20px\\' }}>\\n      <Checkbox\\n        checked={checkAll}\\n        indeterminate={isIndeterminate}\\n        onChange={() => handleCheckAllChange(true)}\\n      >\\n        全选\\n      </Checkbox>\\n      <Checkbox.Group\\n        value={checkedCities}\\n        onChange={value => handleCheckedCitiesChange(value)}\\n      >\\n        {cities.map((city, index) => (\\n          <Checkbox key={index} label={city}></Checkbox>\\n        ))}\\n      </Checkbox.Group>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Checkbox\n    }} mdxType=\"Playground\">\n {() => {\n        const [checkAll, setcheckAll] = React.useState(false);\n        const [cities, setcities] = React.useState(['上海', '北京', '广州', '深圳']);\n        const [checkedCities, setcheckedCities] = React.useState(['上海', '北京']);\n        const [isIndeterminate, setisIndeterminate] = React.useState(true);\n\n        function handleCheckAllChange(checked) {\n          setisIndeterminate(false);\n          setcheckAll(checked);\n          setcheckedCities(checked ? ['上海', '北京', '广州', '深圳'] : []);\n        }\n\n        function handleCheckedCitiesChange(value) {\n          const checkedCount = value.length;\n          const citiesLength = cities.length;\n          setcheckedCities(value);\n          setcheckAll(checkedCount === citiesLength);\n          setisIndeterminate(checkedCount > 0 && checkedCount < citiesLength);\n        }\n\n        return <div style={{\n          'marginLeft': '20px'\n        }}>\n        <Checkbox checked={checkAll} indeterminate={isIndeterminate} onChange={() => handleCheckAllChange(true)} mdxType=\"Checkbox\">全选</Checkbox>\n        <Checkbox.Group value={checkedCities} onChange={value => handleCheckedCitiesChange(value)}>\n          {cities.map((city, index) => <Checkbox key={index} label={city} mdxType=\"Checkbox\"></Checkbox>)}\n        </Checkbox.Group>\n      </div>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"属性\"\n    }}>{`属性`}</h2>\n    <h3 {...{\n      \"id\": \"checkbox-相关属性\"\n    }}>{`Checkbox 相关属性`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`属性名`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`名称`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`checked`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`是否选中`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[String, number, Boolean]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disabled`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`是否禁用`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`label`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`标示`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`indeterminate`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`是否为不稳定状态`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`选中状态改变回调`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`() => {}`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"checkboxgroup-相关属性\"\n    }}>{`CheckboxGroup 相关属性`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`属性名`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`名称`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`min`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`最小选择数量`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[String, number]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`max`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`最大选择数量`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[String, number]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`value`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`选中值`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`size`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`单选框大小`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`['large', 'small']`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`fill`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`填充颜色`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`textColor`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`文本颜色`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`选中状态改变回调`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`() => {}`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}